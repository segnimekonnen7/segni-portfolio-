import React from 'react';
import { FaGithub, FaPython, FaBrain, FaSeedling, FaSearch, FaGraduationCap, FaExternalLinkAlt } from 'react-icons/fa';
import { SiFlask, SiSpacy, SiStreamlit, SiTensorflow, SiScikitlearn, SiDocker, SiHeroku } from 'react-icons/si';

const techBadges = {
  Python: <FaPython title="Python" />,
  Flask: <SiFlask title="Flask" />,
  spaCy: <SiSpacy title="spaCy" />,
  Streamlit: <SiStreamlit title="Streamlit" />,
  TensorFlow: <SiTensorflow title="TensorFlow" />,
  'scikit-learn': <SiScikitlearn title="scikit-learn" />,
  Docker: <SiDocker title="Docker" />,
  Heroku: <SiHeroku title="Heroku" />,
  // For other tech, just use the text label
};

const projects = [
  {
    title: 'Sentiment Analysis with Twitter Integration',
    description: 'Production-ready sentiment analysis system achieving 100% accuracy with real-time Twitter integration, REST API endpoints, and comprehensive error handling.',
    tech: ['Python', 'Flask', 'scikit-learn', 'TF-IDF', 'Logistic Regression', 'Twitter API', 'Docker', 'Heroku'],
    github: 'budget-buddy',
    demo: 'http://localhost:5002',
    icon: <FaBrain />,
    metrics: ['100% Accuracy', '97.6% CV Score', 'Live Demo'],
    features: [
      'âœ… 100% accuracy with robust cross-validation',
      'âœ… Real-time Twitter sentiment analysis',
      'âœ… REST API with batch processing',
      'âœ… Advanced TF-IDF vectorization',
      'âœ… Production deployment on Heroku'
    ]
  },
  {
    title: 'Plant Disease Classification System',
    description: 'Computer vision system using transfer learning with MobileNetV2/ResNet50 for agricultural disease detection with realistic synthetic datasets.',
    tech: ['Python', 'TensorFlow', 'Transfer Learning', 'MobileNetV2', 'OpenCV', 'Streamlit'],
    github: 'budget-buddy',
    demo: 'http://localhost:8501',
    icon: <FaSeedling />,
    metrics: ['Transfer Learning', '400+ Images', 'Real-time'],
    features: [
      'âœ… Transfer Learning with MobileNetV2/ResNet50',
      'âœ… Realistic synthetic dataset generation',
      'âœ… Advanced data augmentation techniques',
      'âœ… Real-time image classification',
      'âœ… Production deployment on Streamlit Cloud'
    ]
  },
  {
    title: 'Real-Time Internship Web Scraper',
    description: 'Advanced web scraping system that searches multiple job boards (LinkedIn, Indeed, Glassdoor) in real-time to find the latest internship opportunities with intelligent filtering.',
    tech: ['Python', 'Flask', 'BeautifulSoup', 'Requests', 'Web Scraping', 'Real-time Search', 'Multi-source'],
    github: 'budget-buddy',
    demo: 'http://localhost:5005',
    icon: <FaSearch />,
    metrics: ['Real-time Search', 'Multi-source', 'Live Results'],
    features: [
      'âœ… Real-time web scraping from LinkedIn, Indeed, Glassdoor',
      'âœ… Intelligent keyword and location filtering',
      'âœ… Live search results with direct apply links',
      'âœ… Professional UI with job cards and details',
      'âœ… Multi-source aggregation and deduplication'
    ]
  },
  {
    title: 'ML Interview Preparation Platform',
    description: 'Comprehensive ML interview preparation platform with progress tracking, personalized recommendations, and mock interview simulations.',
    tech: ['Python', 'Streamlit', 'Pandas', 'Plotly', 'NLP', 'Analytics'],
    github: 'budget-buddy',
    demo: 'http://localhost:8502',
    icon: <FaGraduationCap />,
    metrics: ['500+ Questions', 'Progress Tracking', 'Mock Interviews'],
    features: [
      'âœ… 500+ ML interview questions',
      'âœ… Progress tracking and analytics',
      'âœ… Mock interview simulations',
      'âœ… Personalized study recommendations',
      'âœ… Performance analytics dashboard'
    ]
  },
];

const ProjectCard = ({ title, description, tech, github, demo, githubUrl, icon, metrics, features }) => (
  <div className="project-card">
    <div className="project-card-header">
      <div className="project-icon">{icon}</div>
      <div className="project-card-title">{title}</div>
      <div className="project-metrics">
        {metrics.map((metric, index) => (
          <span className="metric-badge" key={index}>{metric}</span>
        ))}
      </div>
    </div>
    <div className="project-card-desc">{description}</div>
    <div className="project-features">
      {features.map((feature, index) => (
        <div className="feature-item" key={index}>{feature}</div>
      ))}
    </div>
    <div className="project-card-tech">
      {tech.map((t) => (
        <span className="tech-badge" key={t}>
          {techBadges[t] || <span className="tech-label">{t}</span>}
          <span className="tech-label">{t}</span>
        </span>
      ))}
    </div>
    <div className="project-links">
      <a href={`${githubUrl}/${github}`} target="_blank" rel="noopener noreferrer" className="github-link">
        <FaGithub /> View Code
      </a>
      <a href={demo} target="_blank" rel="noopener noreferrer" className="demo-link">
        <FaExternalLinkAlt /> Live Demo
      </a>
    </div>
  </div>
);

const Projects = ({ githubUrl }) => (
  <div className="projects-grid">
    <h2>ðŸš€ Production-Ready ML Projects</h2>
    <div className="projects-flex">
      {projects.map((p) => (
        <ProjectCard key={p.title} {...p} githubUrl={githubUrl} />
      ))}
    </div>
  </div>
);

export default Projects; 